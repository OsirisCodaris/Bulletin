<div class="row m-t-25 " id="stat">
    <div class="col-md-6 col-lg-3">
        <div class="statistic__item statistic__item--green ">
            <h2 class="number text-white ">{{ visitor }}</h2>
            <span class="desc text-white ">Visiteurs</span>
            <div class="icon ">
                <i class="zmdi zmdi-walk text-white"></i>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-3">
        <div class="statistic__item statistic__item--blue ">
            <h2 class="number text-white ">{{users_count}}</h2>
            <span class="desc text-white ">Utilisateurs</span>
            <div class="icon ">
                <i class="zmdi zmdi-accounts text-white"></i>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-3">
        <div class="statistic__item statistic__item--orange">
            <h2 class="number text-white">{{pc_connect_count}}</h2>
            <span class="desc text-white">Nombre de connexion</span>
            <div class="icon">
                <i class="zmdi zmdi-laptop text-white"></i>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-3">
        <div class="statistic__item statistic__item--red">
            <h2 class="number text-white">{{pc_connect_count_at_mnth}}</h2>
            <span class="desc text-white">Connexion ce mois</span>
            <div class="icon">
                <i class="zmdi zmdi-account text-white"></i>
            </div>
        </div>
    </div>
</div>
<script>
    let vue = new Vue({
        el: '#stat',
        data: {
           visitor: 0,
           users :[],
           pc_connect:[]
        },
        computed:{
            users_count(){
                return this.users.length;
            },
            pc_connect_count(){
                return this.pc_connect.length;
            },
            pc_connect_count_at_mnth(){
                var count= 0;
                var year = moment().year()
                var month = moment().month()
                this.pc_connect.forEach(pc => {
                    var date = moment(pc.created_at)
                    if(date.month() == month && date.year()==year){
                        count++;
                    }
                });
                return count;
            }
        }, 
        methods : {
            getPas : function(count){
                    if((count-this.visitor)<=100){
                        return 1
                    }
                    else if((count-this.visitor) > 100 && (count-this.visitor)<=1000){
                        return 10
                    }
                    else if((count-this.visitor)>1000 && (count-this.visitor)<=10000){
                        return 100
                    }
                    else if((count-this.visitor)>10000 && (count-this.visitor)<=100000){
                        return 1000
                    }else{
                        return 10000
                    }
            },
            increment : function(count){
                setInterval(()=>{
                    var pas = this.getPas(count)
                    if(this.visitor<count){
                        this.visitor = this.visitor + pas
                    }else{
                        clearInterval()      
                    }
                },1)
                
            }
        },
        mounted : function(){
            let vm=this
            axios.get('/api/visitor')
            .then((response)=>{
                vm.increment(response.data.count)
                console.log(vm.visitor)
            })
            axios.get('/api/user')
            .then((response)=>{
                vm.users= response.data
            })
            .catch((respone)=>{
                console.log('erreur')
            })
            axios.get('/api/visitor/connect')
            .then((response)=>{
                vm.pc_connect= response.data
            })
            .catch((respone)=>{
                console.log('erreur')
            })
        }
    });
</script> 