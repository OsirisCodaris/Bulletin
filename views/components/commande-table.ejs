<div class="row" id = "cmd"> 
    <div class="col-md-12">
        <!-- DATA TABLE -->
        <h3 class="title-5 m-b-35">Utilisateurs</h3>
        <div class="table-data__tool">
            <div class="table-data__tool-left">
                <div class="rs-select2--light rs-select2--sm">
                    <select class="js-select2" name="time">
                        <option selected="selected">Tous</option>
                        <option value="">Aujourd'hui</option>
                        <option value="">Cette Année</option>
                    </select>
                    <div class="dropDownSelect2"></div>
                </div>
                <button class="au-btn-filter">
                    <i class="zmdi zmdi-filter-list"></i>Filters</button>
            </div>
            <div class="table-data__tool-right">
                <button class="au-btn au-btn-icon au-btn--green au-btn--small" @click="add_commande">
                    <i class="zmdi zmdi-plus"></i>Ajouter</button>
                <div class="rs-select2--dark rs-select2--sm rs-select2--dark2">
                    <select class="js-select2" name="type">
                        <option selected="selected">Export</option>
                        <option value="">Pdf</option>
                        <option value="">Excel</option>
                    </select>
                    <div class="dropDownSelect2"></div>
                </div>
            </div>
        </div>
        <input class="au-input au-input--xl" type="text" @keyup="filtre" name="search" v-model="search" placeholder="Recherche noms, prénom et établissement" />
        <div class="table-responsive table-responsive-data2">
            <table class="table table-data2">
                <thead>
                    <tr>
                        <th>Coordonnées</th>
                        <th>Etablissement</th>
                        <th>Nombre de Pc</th>
                        <th>Date Abonnement</th>
                        <th>Date Expiration</th>
                        <th>Prix</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                        <tr class="tr-shadow" v-for="user_p in users_product">
                            <td>
                                <div class="table-data__info">
                                    <h6>{{user_p.nom}} {{user_p.prenom}}</h6>
                                    <span>
                                        <a :href.prevent="'mailto:'+user_p.email">{{user_p.email}}</a>
                                    </span>
                                    <span>
                                        <a href="#"><strong>{{user_p.contact}}</strong></a>
                                    </span>
                                </div>
                            </td>
                            <td class="desc">{{user_p.etablissement}}</td>
                            <td>{{user_p.number_pc}}</td>
                            <td>{{user_p.created_at.format('LL')}}</td>
                            <td>
                                <span class=" status--process item" data-toggle="tooltip" data-placement="top" :title="user_p.expired.format('LL')" v-if="user_p.status" >{{user_p.expired.fromNow()}}</span>
                                <span class=" status--denied item" data-toggle="tooltip" data-placement="top" :title="user_p.expired.format('LL')" v-else="user_p.status" >{{user_p.expired.fromNow()}}</span>
                            </td>
                            <td>{{user_p.price}}</td>
                            <td>
                                <div class="table-data-feature">
                                    <button class="item" data-toggle="tooltip" data-placement="top" title="Modifier" @click="edit(user_p.id)">
                                        <i class="zmdi zmdi-edit"></i>
                                    </button>
                                    <button class="item" data-toggle="tooltip" data-placement="top" title="Jours" @click="edit_commande(user_p)">
                                        <i class="zmdi zmdi-calendar"></i>
                                    </button>
                                    <button class="item" data-toggle="tooltip" data-placement="top" title="Ordinateur" @click="edit_commande_pc(user_p)">
                                        <i class="zmdi zmdi-laptop"></i>
                                    </button>
                                    <button class="item" data-toggle="tooltip" data-placement="top" title="Supprimer" @click="deleted(user_p)">
                                        <i class="zmdi zmdi-delete"></i>
                                    </button>
                                </div>
                            </td>
                            <tr class="spacer"></tr>
                        </tr>
                        
                </tbody>
            </table>
        </div>
        <!-- END DATA TABLE -->
    </div>
</div>
<script>
    let commande = new Vue({
        el: '#cmd',
        data: {
           globalUsers :[],
           product : [],
           users : [],
           days_product_free : 90,
           price_product : 360000,
           price_per_person: 10000
        },
        computed : {
            users_product(){
                var productNuser = [];
                this.users.forEach(user => {
                    this.product.forEach(item => {
                        if(user.id_key === item.id){             
                            var extras = {
                                expired : moment(item.created_at).add(item.valid_for,'d'),
                                status : (moment(item.created_at).add((item.valid_for-6),'d')).isAfter(moment()), // pour etre en rouge a partir de 5 jours
                                price : item.valid_for >= this.days_product_free ? (this.price_product + (item.number_pc - 1)* this.price_per_person) : "gratuit"
                            }       
                            item.created_at = moment(item.created_at)
                            productNuser.push( Object.assign({},item,user,extras))
                        }
                    });
                });
                return productNuser;
            }
        },
        methods : {
            filtre(){
                this.users = this.globalUsers
                if(this.search){
                    this.users= this.users.filter(user=> ((user.nom).toUpperCase()).includes((this.search).toUpperCase()) || ((user.prenom).toUpperCase()).includes((this.search).toUpperCase())||((user.etablissement).toUpperCase()).includes((this.search).toUpperCase()))
                }else{
                    this.users = this.globalUsers
                }
            },
            add_commande : function (){
                window.location.href = '/gestion/keyGenerator'
            },
            getProducts : async function (){
                let vm=this
                try{
                    var result = await axios.get('/api/user')
                    vm.users = result.data
                    vm.globalUsers = result.data
                    var res = await axios.get('/api/key')
                    vm.product = res.data
                }catch(e){
                    console.log("erreur")
                }
            },
            edit: function(id){
                window.location.href ="/gestion/keyGenerator/"+id
            },
            edit_commande : function(user){
                let vm = this
                this.$dialog
                .prompt({
                    promptHelp : "ok",
                    title: "Commandes de "+user.prenom+" "+user.nom,
                    body: "La fin de l'abonnement est prévu pour le "+user.expired.format('LL')+" ( "+user.expired.fromNow()+" )",
                    
                }, {
                    promptHelp: 'Entrez le nombre jours de plus que vous souhaitez ajouter puis cliquez sur  "[+:okText]"',
                    loader : true,
                    cancelText : "Retour",
                    animation : "bounce"
                })
                .then(dialog => {
                    if(!isNaN(Number(dialog.data))){
                        let add_valid= Number(dialog.data)+user.valid_for
                        axios.put('/api/key',{
                            id: user.id_key,
                            valid_for : add_valid
                        })
                        .then((response)=>{
                            vm.getProducts()
                            let date = (user.created_at.add(add_valid,'d')).format('LL')
                            dialog.close()
                            vm.$dialog.alert("La nouvelle date d'expiration est le "+date)
                        })
                        .catch((error)=>{
                            dialog.close()
                            console.log(error.response)
                        })
                    }else{
                        dialog.close()
                        vm.$dialog.alert("Veuillez entrer un nombre !!!")
                    }
                   
                })
                .catch(() => {
                    console.log('Prompt dismissed');
                });
            },
            edit_commande_pc : function(user){
                let vm = this
                this.$dialog
                .prompt({
                    promptHelp : "ok",
                    title: "Commandes de "+user.prenom+" "+user.nom,
                    body: "Le nombre d'ordinateur qui peuvent se connecté est de : "+user.number_pc,
                    
                }, {
                    promptHelp: 'Entrez un nouveau nombre de pc puis cliquez sur  "[+:okText]"',
                    loader : true,
                    cancelText : "Retour",
                    animation : "bounce"
                })
                .then(dialog => {
                    if(!isNaN(Number(dialog.data))){
                        let pc= parseInt(dialog.data)
                        axios.put('/api/key',{
                            id: user.id_key,
                            number_pc : pc
                        })
                        .then((response)=>{
                            vm.getProducts()
                            dialog.close()
                            vm.$dialog.alert("Le nombre d'Ordinateur est passé de "+user.number_pc+" à "+pc)
                        })
                        .catch((error)=>{
                            dialog.close()
                            console.log(error.response)
                        })
                    }else{
                        dialog.close()
                        vm.$dialog.alert("Veuillez entrer un nombre !!!")
                    }
                   
                })
                .catch(() => {
                    console.log('Prompt dismissed');
                });
            },
            deleted : function(user){
                let vm =this
                this.$dialog.confirm("Vous vraiment procéder à la suppression ?",{
                    loader : true
                })
                .then((dialog)=>{
                    axios.delete('/api/user/'+user.id+'?key='+user.id_key)
                    .then((response)=>{
                       vm.getProducts()
                       loader = false
                       dialog.close()
                       this.$dialog.alert("supprimé")
                    })
                    .catch((error)=>{
                        dialog.close()
                        this.$dialog.alert(error.data.response)
                    })               
                })
               
            }
        },
        
        mounted : async function(){
            //setInterval(this.increment,10)
            console.log('mounted cmd')
            this.getProducts();
          
        },
        created :  function() {
            console.log("created")
           
        },
        beforeUpdate : function(){
            console.log('before')
        }
    });
</script>