<div class="row m-t-25 " id="stat">
    <div class="col-md-6 col-lg-3">
        <div class="statistic__item statistic__item--green ">
            <h2 class="number text-white ">{{product_sell}}</h2>
            <span class="desc text-white ">Clé générée</span>
            <div class="icon ">
                <i class="zmdi zmdi-key text-white"></i>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-3">
        <div class="statistic__item statistic__item--blue">
            <h2 class="number text-white">{{product_sell_mth}}</h2>
            <span class="desc text-white">Ce mois-ci</span>
            <div class="icon">
                <i class="zmdi zmdi-calendar-note text-white"></i>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-3">
        <div class="statistic__item statistic__item--orange">
            <h2 class="number text-white">{{product_sell_week}}</h2>
            <span class="desc text-white">Cette semaine</span>
            <div class="icon">
                <i class="zmdi zmdi-calendar-note text-white"></i>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-3">
        <div class="statistic__item statistic__item--red">
            <h2 class="number text-white">$ {{gains}}</h2>
            <span class="desc text-white">Gains Total</span>
            <div class="icon">
                <i class="zmdi zmdi-money text-white"></i>
            </div>
        </div>
    </div>
</div>
<script>
    let vue = new Vue({
        el: '#stat',
        data: {
           product_sell : 0,
           products : [],
           product_sell_week : 0,
           pc_number : 0,
           days_product_free : 90,
           price_per_product : 360000,
           price_per_user : 10000
        },
        computed :{
            product_sell_mth(){
                var sell_mth = 0;
                var date = moment().subtract(1,'M')
                this.products.forEach(element => {
                    if((moment(element.created_at)).isAfter(date)){
                        sell_mth++
                    }
                });
                return sell_mth
            },
            gains(){
                var gain = 0
                this.products.forEach(element => {
                    if(element.valid_for>this.days_product_free){
                        gain = gain + ((element.number_pc-1)*this.price_per_user) + this.price_per_product
                    }
                });
                return gain
            }
        },
        mounted : function(){
            //setInterval(this.increment,10)
            console.log('mounted stat')
            let vm=this
            axios.get('/api/key')
            .then((response)=>{
                vm.products = response.data
                vm.product_sell = response.data.length
                var date = moment().subtract(7,'d')
                vm.products.forEach(element => {
                    if((moment(element.created_at)).isAfter(date)){
                        vm.product_sell_week++
                    }
                    vm.pc_number =vm.pc_number + element.number_pc
                });
            })
            .catch((respone)=>{
                console.log('erreur')
            })
        },
        created : function() {
            console.log('created stat')
        }
    });
</script> 